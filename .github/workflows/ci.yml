name: CI Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      PORT: 3000
      NODE_ENV: dev
      JWT_SECRET: my-super-duper-uper-wooper-mega-secret-json-web-token
      SALT_RUNDS: 10
      DB_HOST: localhost
      DB_PORT: 5433
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: deliverydb
      REFRESH_TOKEN_MAX_AGE: $((30*24*60*60*1000))

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Start services with Docker Compose
        run: docker compose up -d

      - name: Wait for Postgres
        run: |
          echo "Waiting for Postgres..."
          for i in {1..60}; do
            docker exec deliverydb pg_isready -U postgres && break
            echo "Waiting 1s..."
            sleep 1
          done

      - name: Wait for Redis
        run: |
          echo "Waiting for Redis..."
          for i in {1..30}; do
            docker exec delivery-redis redis-cli ping | grep PONG && break
            echo "Waiting 1s..."
            sleep 1
          done

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Coverage (only on main)
        if: github.ref == 'refs/heads/main'
        run: npm run test:coverage

      - name: Upload coverage artifact (only on main)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
